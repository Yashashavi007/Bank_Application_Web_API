// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Technovert.Bankapp.Web.API.Models;

namespace Technovert.Bankapp.Web.API.Migrations
{
    [DbContext(typeof(BankDbContext))]
    [Migration("20220131041027_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Technovert.Bankapp.Web.API.Models.Bank", b =>
                {
                    b.Property<string>("IFSCCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IFSCCode");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("Technovert.Bankapp.Web.API.Models.Currency", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("ConversionRate")
                        .HasColumnType("real");

                    b.HasKey("Name");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Technovert.Bankapp.Web.API.Models.Customer", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.Property<string>("BankIFSCCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Pin")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasAlternateKey("AccountNumber");

                    b.HasIndex("BankIFSCCode");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Technovert.Bankapp.Web.API.Models.Employee", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BankIFSCCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Pin")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BankIFSCCode");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Technovert.Bankapp.Web.API.Models.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReceiverAccountNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SenderAccountNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Technovert.Bankapp.Web.API.Models.Customer", b =>
                {
                    b.HasOne("Technovert.Bankapp.Web.API.Models.Bank", "Bank")
                        .WithMany("Customers")
                        .HasForeignKey("BankIFSCCode");

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Technovert.Bankapp.Web.API.Models.Employee", b =>
                {
                    b.HasOne("Technovert.Bankapp.Web.API.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankIFSCCode");

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Technovert.Bankapp.Web.API.Models.Transaction", b =>
                {
                    b.HasOne("Technovert.Bankapp.Web.API.Models.Customer", "Customer")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Technovert.Bankapp.Web.API.Models.Bank", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Technovert.Bankapp.Web.API.Models.Customer", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
